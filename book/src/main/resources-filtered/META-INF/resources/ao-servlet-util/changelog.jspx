<?xml version="1.0" encoding="UTF-8"?>
<!--
ao-servlet-util - Miscellaneous Servlet and JSP utilities.
Copyright (C) 2019  AO Industries, Inc.
    support@aoindustries.com
    7262 Bull Pen Cir
    Mobile, AL 36695

This file is part of ao-servlet-util.

ao-servlet-util is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ao-servlet-util is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with ao-servlet-util.  If not, see <http://www.gnu.org/licenses />.
-->
<jsp:root
	xmlns:ao="https://aoindustries.com/ao-taglib/"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:changelog="https://semanticcms.com/changelog/taglib/"
	xmlns:core="https://semanticcms.com/core/taglib/"
	xmlns:fn="http://java.sun.com/jsp/jstl/functions"
	xmlns:jsp="http://java.sun.com/JSP/Page"
	version="2.1"
>
	<jsp:directive.page language="java" pageEncoding="UTF-8" session="false" />
	<core:page
		title="@{documented.name} Changelog"
		shortTitle="Changelog"
		tocLevels="1"
		datePublished="2019-08-21T05:09:52-0500"
		dateModified="2019-10-21T09:20:24-0500"
	>
		<!-- The current snapshot, unreleased version -->
		<c:set var="version" value="@{com.aoindustries:ao-servlet-util:pom.version}" />
		<ao:assert
			test="${!fn:startsWith(version, '@')}"
			message="Version not substituted: #{version}"
		/>
		<c:if test="${fn:endsWith(version, '-SNAPSHOT') and !fn:endsWith(version, '-POST-SNAPSHOT')}">
			<changelog:release
				projectName="@{documented.name}"
				version="#{version}"
				groupId="@{documented.groupId}"
				artifactId="@{documented.artifactId}"
				scmUrl="@{documented.scm.url}"
			>
				<ul>
					<li>New class <ao:a href="apidocs/com/aoindustries/servlet/http/Html.html">Html</ao:a>:
						<ol>
							<li>
								New functionality derived from methods and constants moved from
								<ao:a href="https://aoindustries.com/ao-taglib/apidocs/com/aoindustries/taglib/HtmlTag.html">HtmlTag</a>.
							</li>
							<li>New class <code>Serialization</code> representing HTML/XHTML differences.</li>
							<li>Now supports writing XML declaration when both serving as XHTML and response encoding is not UTF-8.</li>
							<li>Now selects HTML or XHTML doctype based on current <code>Serialization</code>.</li>
							<li>
								New <ao:a rel="nofollow" href="@{javac.link.javaeeApi.6}javax/servlet/ServletContext.html#getInitParameter(java.lang.String)">context-param</ao:a>
								<code>com.aoindustries.servlet.http.Html$Serialization.default</code>
								that allows an application to control the selection of HTML versus XHTML.
								Supports three values:
								<ul>
									<li><code>html</code> - Use HTML always</li>
									<li><code>xhtml</code> - Use XHTML always</li>
									<li><code>auto</code> - (default) - Automatically choose based on the client's <code>Accept</code> header</li>
								</ul>
							</li>
							<li>
								New method <code>Html.DocType.getDefault(…)</code> that provides the default
								doctype for an application.  First checks
								<ao:a rel="nofollow" href="@{javac.link.javaeeApi.6}javax/servlet/ServletContext.html#getInitParameter(java.lang.String)">context-param</ao:a>
								<code>com.aoindustries.servlet.http.Html$DocType.default</code>,
								then defaults to "html5" when not present, empty, or "default".
							</li>
							<li>
								New methods <code>Html.DocType.set(…)</code> and <code>Html.DocType.get(…)</code> that allow
								the registration of the doctype in effect on the request.
							</li>
						</ol>
					</li>
				</ul>
			</changelog:release>
		</c:if>

		<changelog:release
			projectName="@{documented.name}"
			version="1.1.0"
			datePublished="2019-10-14T02:54:27-0500"
			groupId="@{documented.groupId}"
			artifactId="@{documented.artifactId}"
			scmUrl="@{documented.scm.url}"
		>
			<ul>
				<li>
					Added <ao:a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control">Cache-Control</ao:a>
					header to <ao:a href="apidocs/com/aoindustries/servlet/http/LastModifiedServlet.html">LastModifiedServlet</ao:a>.
					Defaults to a short-term setting of public, five-minute, and allowing stale.
					This will help performance when <code>*.css</code> files are accessed directly
					(URLs not rewritten with <code><ao:a href="apidocs/com/aoindustries/servlet/http/LastModifiedServlet.html#LAST_MODIFIED_PARAMETER_NAME">lastModified=…</ao:a></code>
					parameter).
				</li>
			</ul>
		</changelog:release>

		<changelog:release
			projectName="@{documented.name}"
			version="1.0.0"
			datePublished="2019-10-08T01:10:52-0500"
			groupId="@{documented.groupId}"
			artifactId="@{documented.artifactId}"
			scmUrl="@{documented.scm.url}"
		>
			<ul>
				<li>Pulled Servlet and JSP related utilities out of <core:link book="/aocode-public" page="/index.jspx" />.</li>
				<li>
					Split HTTP-specific parts of <ao:a href="apidocs/com/aoindustries/servlet/ServletUtil.html">ServletUtil</ao:a>
					into <ao:a href="apidocs/com/aoindustries/servlet/http/HttpServletUtil.html">HttpServletUtil</ao:a>.
				</li>
				<li>Added variants of <code>HttpServletUtil.getAbsoluteURL(…)</code> that allow not adding context path.</li>
				<li>Cookie names, values, comments, and paths are now URI-encoded.</li>
				<li>
					<code>HttpServletUtil.getContextRequestUri()</code> now percent-encodes
					result of <code>HttpServletRequest.getContextPath()</code>
					because it sometimes comes back percent encoded, but is usually decoded.
				</li>
				<li>
					Absolute URLs are now generated in <ao:a href="https://tools.ietf.org/html/rfc3986">RFC 3986 URI</ao:a> US-ASCII
					format, even when the context path has Unicode characters.
				</li>
				<li>Absolute URLs are generated first, then passed to response URL encoding.</li>
				<li>
					<code>HttpServletUtil.sendRedirect(…)</code> now converts location to
					<ao:a href="https://tools.ietf.org/html/rfc3986">RFC 3986 URI</ao:a> US-ASCII format.
				</li>
				<li>Added <ao:a href="apidocs/com/aoindustries/servlet/http/Canonical.html">Canonical URL</ao:a> support:
					<ol>
						<li>
							New class <ao:a href="apidocs/com/aoindustries/servlet/http/Canonical.html">Canonical</ao:a> that
							coordinates when canonical URLs should be generated during <ao:a rel="nofollow" href="@{javac.link.javaeeApi.6}javax/servlet/http/HttpServletResponse.html#encodeURL(java.lang.String)">response URL rewriting</ao:a>
							(such as not adding per-user information when cookies are disabled).
							These canonical URLs, without per-user settings, are used for things like
							<ao:a href="https://support.google.com/webmasters/answer/139066">Canonical URLs</ao:a>,
							<ao:a href="https://schema.org/BreadcrumbList">BreadcrumbList</ao:a>,
							and <ao:a href="https://www.sitemaps.org/">Sitemaps</ao:a>.
						</li>
						<li>
							<ao:a href="apidocs/com/aoindustries/servlet/http/HttpServletUtil.html">HttpServletUtil</ao:a>
							updated with new <code>canonical</code> parameters.
						</li>
						<li>
							When in auto mode, <ao:a href="apidocs/com/aoindustries/servlet/http/LastModifiedServlet.html">last modified stamping</ao:a>
							is not performed on <ao:a href="apidocs/com/aoindustries/servlet/http/Canonical.html">Canonical URLs</ao:a>.
						</li>
					</ol>
				</li>
				<li>Now adding last modified parameter to <code>*.jnlp</code>, <code>*.tld</code>, and <code>*.xsd</code> files, too.</li>
				<li>
					<ao:a href="apidocs/com/aoindustries/servlet/http/HttpServletUtil.html">HttpServletUtil</ao:a>
					cleaned-up significantly, with more consistent method names and more uniform
					method overloads.
				</li>
				<li>Improved <ao:a href="apidocs/com/aoindustries/servlet/http/LastModifiedServlet.html">LastModifiedServlet</ao:a>
					Unicode support:
					<ol>
						<li>Parser supports both US-ASCII-encoded and Unicode URLs (or any mixture)</li>
						<li>Parser supports fragments on URLs</li>
						<li>Now properly decodes path components</li>
					</ol>
				</li>
			</ul>
		</changelog:release>
	</core:page>
</jsp:root>
